name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: 1.0.0
      OS: linux/amd64

    steps:
      - name: Checkout release
        uses: actions/checkout@v3

      - name: Set env
        run: echo "TAG=$VERSION" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build and release to DockerHub
        env:
          REPO: ${{ secrets.DOCKER_REPOSITORY }}
        run: |
          docker build -f Dockerfile.prod --platform $OS -t $REPO:${{ env.TAG }} .
          docker push $REPO:${{ env.TAG }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            docker ps

            echo "=>>> docker stop front container...."
            docker stop $(docker ps -q -af "name=test-front")

            echo "=>>> docker remove front container...."
            docker rm $(docker ps -q -af "name=test-front")

            docker pull ${{ secrets.DOCKER_REPOSITORY }}:${{ env.TAG }}

            cd /
            pwd
            sed -i  "5s|.*|        image: ${{ secrets.DOCKER_REPOSITORY }}:${{ env.TAG }}|g" docker-compose.yml

            docker images

            docker-compose up -d
            docker image prune -af
            docker ps
